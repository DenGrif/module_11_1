# # Библиотека requests
# # Библиотека requests позволяет легко делать HTTP-запросы и обрабатывать ответы. Это полезно для получения данных с веб-сайтов или API.

import requests

# Запрос данных с сайта
response = requests.get('https://api.github.com')
# Вывод ответа в консоль
print(response.json())  # Печатает JSON-ответ от GitHub API
print("\n код requests завершён \n")

# Возможности библиотеки requests:
#
# Отправка HTTP-запросов (GET, POST, PUT, DELETE и т.д.)
# Управление заголовками запросов
# Обработка параметров и данных формы
# Работа с ответами, включая статус-коды и содержимое



# Библиотека pandas
# Библиотека pandas предназначена для работы с данными и предоставляет мощные структуры данных для анализа.
# Она особенно удобна для обработки таблиц и временных рядов.

import pandas as pd

# Создание DataFrame из словаря
data = {
    'Name': ['Alice', 'Bob', 'Charlie'],
    'Age': [25, 30, 35],
    'City': ['New York', 'Los Angeles', 'Chicago']
}
df = pd.DataFrame(data)

# Простая аналитика
print("Средний возраст:", df['Age'].mean())  # Средний возраст
print("Данные по городам:\n", df.groupby('City').size())  # Количество людей по городам

# Сохранение DataFrame в CSV файл
df.to_csv('people.csv', index=False)
print("\n код pandas завершён \n")
#
# # Возможности библиотеки pandas:
#
# Чтение и запись данных из/в различные форматы (CSV, Excel, SQL и т.д.)
# Манипуляция данными (фильтрация, группировка, агрегация)
# Работа с временными рядами и индексы
# Обработка пропущенных данных и работа с дублированными записями



# Библиотека matplotlib
# Библиотека matplotlib используется для создания графиков и визуализации данных.
# Она позволяет строить различные виды графиков и настроить их внешний вид.

import matplotlib.pyplot as plt

# Данные для графика
x = [1, 2, 3, 4, 5]
y = [2, 3, 5, 7, 11]

# Создание графика
plt.plot(x, y, marker='o')

# Настройка графика
plt.title('Пример графика')
plt.xlabel('X')
plt.ylabel('Y')
plt.grid(True)

# Показ графика
plt.show()
print("\n код matplotlib завершён \n")

# Возможности библиотеки matplotlib:
#
# Построение различных типов графиков (линейные, столбчатые, круговые и т.д.)
# Настройка визуальных элементов графика (цвета, метки, заголовки)
# Создание сложных композиций из нескольких графиков
# Сохранение графиков в различные форматы изображений